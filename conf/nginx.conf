types {
	text/csv                    csv;
}

upstream discourse {
	server unix:/var/www/discourse/tmp/sockets/thin.0.sock;
	server unix:/var/www/discourse/tmp/sockets/thin.1.sock;
	server unix:/var/www/discourse/tmp/sockets/thin.2.sock;
	server unix:/var/www/discourse/tmp/sockets/thin.3.sock;
}

server {
	listen *:80;
	server_name discourse;
	server_tokens off;
	root /var/www/discourse/public;
	rewrite ^ https://$host/$request_uri permanent;
}

server {
	listen 443;
	gzip on;
	gzip_min_length 1000;
	gzip_types application/json text/css application/x-javascript;

	server_name discourse;
	sendfile on;
	keepalive_timeout 65;

	ssl on;
	ssl_certificate /etc/nginx/ssl/server.crt;
	ssl_certificate_key /etc/nginx/ssl/server.key;
	ssl_protocols SSLv3 TLSv1 TLSv1.2;
	ssl_ciphers AES:HIGH:!ADH:!MD5;
	ssl_prefer_server_ciphers on;
	
	client_max_body_size 2m;
	set $public /var/www/discourse/public;

	location / {
		root $public;
		location ~ ^/assets/ {
			expires 1y;
			add_header Cache-Control public;
			add_header ETag "";
			break;
		}

		location ~ ^/uploads/ {
			expires 1y;
			add_header Cache-Control public;
			add_header ETag "";
			location ~ /stylesheet-cache/ { try_files $uri =404; }
			# images
			location ~* \.(gif|png|jpg|jpeg|bmp|tif|tiff)$ { try_files $uri =404; }
			# thumbnails & optimized images
			location ~ /_optimized/ { try_files $uri =404; }
			# attachments must go through the rails application to get the right content-disposition header
			proxy_set_header X-Sendfile-Type X-Accel-Redirect;
			proxy_set_header X-Accel-Mapping $public/=/downloads/;
			proxy_pass http://discourse;
			break;
		}

		try_files $uri @discourse;
	}

	location /downloads/ {
		internal;
		alias $public/;
	}

	location @discourse {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $http_host;
		proxy_pass http://discourse;
	}
}
