---
- hosts: discourse
  vars_files:
    - yml/vars.yml
  handlers:
    - include: yml/handlers.yml
  tasks:
  - name: Upadate system cache
    action: apt update_cache=yes
  - name: Upgrade packages
    action: apt upgrade=dist
  - name: install redis-server
    action: apt pkg='redis-server'
  - name: install dependency packages
    action: apt pkg={{ item }}
    with_items: ${system_packages}
  - name: install postfix
    action: apt pkg='postfix'
  - name: install nginx
    action: apt pkg='nginx'
  - name: Create the SSL directory
    action: file state=directory path=/etc/nginx/ssl
  - name: Upload SSL certificate
    action: copy src=ssl/server.crt dest=/etc/nginx/ssl/
  - name: Upload SSl private key
    action: copy src=ssl/server.key dest=/etc/nginx/ssl/
  - name: Copy nginx configuration
    action: copy src=conf/nginx.conf dest=/etc/nginx/sites-available/{{ project_name }}
  - name: Enable nginx configuration
    action: file src=/etc/nginx/sites-available/{{ project_name }} dest=/etc/nginx/sites-enabled/{{ project_name }} state=link
  - name: Remove dafault nginx configuration
    action: file path=/etc/nginx/sites-enabled/default state=absent
    notify: restart nginx
  - name: Create user {{ project_name }}
    action: user name={{ project_name }} comment="Discourse application" home=/home/{{ project_name }} shell=/bin/bash
  - action: authorized_key user={{ project_name }} key="{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
  - name: Creating /var/www/{{ project_name }} directory
    action: file group={{ project_name }} owner={{ project_name }} mode=755 state=directory path=/var/www/{{ project_name }}
  - name: install postgresql
    action: apt pkg={{ item }}
    with_items: ${postgresql_packages}


- hosts: discourse
  sudo: yes
  sudo_user: postgres
  vars_files:
    - yml/db.yml
  tasks:
  - name: Create database discourse_prod
    action: postgresql_db db={{ dbname }}
  - name: Create user and grant access 
    action: postgresql_user db={{ dbname }} user={{ dbuser }} password={{ dbpassword }} priv=ALL role_attr_flags=SUPERUSER

- hosts: discourse
  sudo: yes
  sudo_user: discourse
  vars_files: 
    - yml/app.yml
  tasks:
  - name: Get latest code
    action: git repo=git://github.com/discourse/discourse.git dest=/var/www/{{ project_name }} version=master
  - name: Configure discourse
    action: copy src=conf/database.yml dest=/var/www/{{ project_name }}/config/database.yml
  - action: copy src=conf/redis.yml dest=/var/www/{{ project_name }}/config/redis.yml
  - action: copy src=conf/discourse.pill dest=/var/www/{{ project_name }}/config/discourse.pill
  - action: copy src=conf/production.rb dest=/var/www/{{ project_name }}/config/environments/production.rb
  - action: script scripts/bundle.sh
  - action: script scripts/bluepill.sh
  - action: script scripts/start_discourse.sh
